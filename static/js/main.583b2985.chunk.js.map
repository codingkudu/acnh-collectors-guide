{"version":3,"sources":["components/FishCard/FishCard.module.css","components/AcnhHeader/AcnhHeader.module.css","components/Settings/Settings.module.css","components/FishGuide/FishGuide.module.css","components/Footer/Footer.module.css","context/ThemeContext.tsx","components/AcnhHeader/AcnhHeader.tsx","services/getFishService.ts","components/FishCard/FishCard.tsx","components/FishGuide/FishGuide.tsx","components/Footer/Footer.tsx","components/Settings/Settings.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Theme","AcnhHeader","className","styles","data-testid","Navbar","nav","bg","variant","expand","Brand","href","GetFishService","useState","status","result","setResult","useEffect","axios","get","then","response","data","payload","catch","error","FishCard","fish","fishprop","Container","Row","row","Col","src","icon_uri","alt","name","details","id","availability","isAllDay","toString","isAllYear","join","location","time","shadow","ThemeContext","createContext","theme","North","setTheme","console","warn","useTheme","useContext","FishGuide","service","currMonth","Date","getMonth","filter","includes","map","Footer","target","rel","Settings","formatter","Intl","DateTimeFormat","month","radios","value","South","format","h4","ButtonGroup","toggle","radio","idx","ToggleButton","type","checked","onChange","App","React","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.583b2985.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"FishCard\":\"FishCard_FishCard__1Tie_\",\"row\":\"FishCard_row__1EYXn\",\"details\":\"FishCard_details__1xIzH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AcnhHeader\":\"AcnhHeader_AcnhHeader__hfl5w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Settings\":\"Settings_Settings__3JhjC\",\"container\":\"Settings_container__NFx3P\",\"h4\":\"Settings_h4__2A09Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FishGuide\":\"FishGuide_FishGuide__1gxYT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App-link\":\"Footer_App-link__1a16Z\"};","import { createContext, useContext } from \"react\";\r\n\r\n\r\nexport enum Theme {\r\n    North = 'north',\r\n    South = 'south',\r\n}\r\n\r\nexport type ThemeContextType = {\r\n    theme: Theme;\r\n    setTheme: (Theme: Theme) => void;\r\n}\r\n\r\nexport const ThemeContext = createContext<ThemeContextType>({ theme: Theme.North, setTheme: theme => console.warn('no theme provider') });\r\nexport const useTheme = () => useContext(ThemeContext); // custom hook have prefix 'use'","import React from 'react';\nimport { Navbar } from 'react-bootstrap';\nimport styles from './AcnhHeader.module.css';\n\nconst AcnhHeader: React.FC = () => (\n  <div className={styles.AcnhHeader} data-testid=\"AcnhHeader\">\n    <Navbar className={styles.nav} bg=\"success\" variant=\"dark\" expand=\"lg\">\n      <Navbar.Brand href=\"#home\">ACNH: Collectors Guide</Navbar.Brand>\n    </Navbar>\n  </div>\n);\n\nexport default AcnhHeader;\n","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Fish } from \"../types/Fish\";\r\nimport { Service } from \"../types/Service\";\r\n\r\n\r\nexport interface Fishs {\r\n    results: Fish[];\r\n}\r\n\r\nconst GetFishService = () => {\r\n    const [result, setResult] = useState<Service<Fish[]>>({\r\n        status: 'loading'\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get('https://acnhapi.com/v1a/fish/')\r\n            .then(response => response.data)\r\n            .then(response => setResult({ status: 'loaded', payload: response }))\r\n            .catch(error => setResult({ status: 'error', error }));\r\n    }, []);\r\n    return result;\r\n};\r\n\r\nexport default GetFishService;\r\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Fish } from '../../types/Fish';\nimport styles from './FishCard.module.css';\n\ninterface IFishCardProps {\n  fishprop: Fish\n}\n\nconst FishCard: React.FC<IFishCardProps> = ({ fishprop: fish }: IFishCardProps) => {\n  return (\n    <div className={styles.FishCard} data-testid=\"FishCard\">\n      <Container>\n        <Row className={styles.row}>\n          <Col>\n            <img src={fish.icon_uri} alt={fish.name['name-EUen']}></img>\n          </Col>\n          <Col className={styles.details}>\n            <div>\n              Name: {fish.name['name-EUen']}\n            </div>\n            <div>\n              Id: {fish.id}\n            </div>\n            <div>\n              All day: {fish.availability.isAllDay.toString()}\n            </div>\n            <div>\n              All year: {fish.availability.isAllYear.toString()}\n            </div>\n            <div>\n              Southern Hemisphere Months: {fish.availability['month-array-southern'].join(\",\")}\n            </div>\n            <div>\n              Northern Hemisphere Months: {fish.availability['month-array-northern'].join(\",\")}\n            </div>\n            <div>\n              Location: {fish.availability.location}\n            </div>\n            <div>\n              Time: {fish.availability.time}\n            </div>\n            <div>\n              Shadow: {fish.shadow}\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default FishCard;\n","import React from 'react';\r\nimport styles from './FishGuide.module.css';\r\nimport GetFishService from '../../services/getFishService';\r\nimport FishCard from '../FishCard/FishCard';\r\nimport { Theme, useTheme } from '../../context/ThemeContext';\r\n\r\nconst FishGuide: React.FC<{}> = () => {\r\n\r\n  const service = GetFishService();\r\n\r\n  const { theme } = useTheme();\r\n  const OFFSET = 1;\r\n  const currMonth = new Date().getMonth() + OFFSET;\r\n\r\n  return (\r\n    < div className={styles.FishGuide} data-testid=\"FishGuide\" >\r\n      <main>\r\n        <div>\r\n          <h3>Fish Guide</h3>\r\n        </div>\r\n        <div>\r\n          {service.status === 'loading' && (\r\n            <div className=\"loader-container\">\r\n              <div>Loading</div>\r\n            </div>\r\n          )}\r\n          {service.status === 'loaded'\r\n            && service.payload?.filter(fish => fish.availability.isAllYear === false)\r\n              .filter(fish => {\r\n                if (theme === Theme.North) {\r\n                  return fish.availability['month-array-northern'].includes(currMonth)\r\n                } else {\r\n                  return fish.availability['month-array-southern'].includes(currMonth)\r\n                }\r\n              })\r\n              .map(fish => (\r\n                <div className=\"fish-item\">\r\n                  <FishCard fishprop={fish} />\r\n                </div>\r\n              ))}\r\n          {service.status === 'loaded' && !service.payload && (\r\n            <div>Error empty array returned</div>\r\n          )}\r\n          {service.status === 'error' && (\r\n            <div>Oh no, error in calling endpoint</div>\r\n          )}\r\n        </div>\r\n      </main>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default FishGuide;\r\n","import React from 'react';\nimport styles from './Footer.module.css';\n\nconst Footer: React.FC = () => (\n  <div className={styles.Footer} data-testid=\"Footer\">\n    <footer>\n      <a\n        className=\"App-link\"\n        href=\"https://github.com/codingkudu/codingkudu\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        CodingKudu on github\n        </a>\n    </footer>\n  </div>\n);\n\nexport default Footer;\n","import React from 'react';\r\nimport { ButtonGroup, Row, Container, ToggleButton } from 'react-bootstrap';\r\nimport styles from './Settings.module.css';\r\nimport { Theme, useTheme } from '../../context/ThemeContext';\r\n\r\ninterface Props {\r\n}\r\n\r\nconst Settings: React.FC<Props> = () => {\r\n\r\n  const formatter = new Intl.DateTimeFormat('en', { month: 'long' });\r\n\r\n  // Context API\r\n  const { theme, setTheme } = useTheme();\r\n  const radios = [\r\n    { name: 'North', value: Theme.North },\r\n    { name: 'South', value: Theme.South },\r\n  ];\r\n\r\n  return (\r\n    <div className={styles.Settings} data-testid=\"Settings\">\r\n      <Container>\r\n        <Row>\r\n          <h4>Month: {formatter.format(new Date())}</h4>\r\n        </Row>\r\n      </Container>\r\n      <Container>\r\n        <Row>\r\n          <h4 className={styles.h4}>Hemisphere:</h4>\r\n          <ButtonGroup toggle>\r\n            {radios.map((radio, idx) => (\r\n              <ToggleButton\r\n                key={idx}\r\n                type=\"radio\"\r\n                variant=\"secondary\"\r\n                name=\"radio\"\r\n                value={radio.value}\r\n                checked={theme === radio.value}\r\n                onChange={() => setTheme(radio.value)}\r\n              >\r\n                {radio.name}\r\n              </ToggleButton>\r\n            ))}\r\n          </ButtonGroup>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport AcnhHeader from './components/AcnhHeader/AcnhHeader';\r\nimport FishGuide from './components/FishGuide/FishGuide';\r\nimport Footer from './components/Footer/Footer';\r\nimport Settings from './components/Settings/Settings';\r\nimport { Theme, ThemeContext } from './context/ThemeContext';\r\n\r\nfunction App() {\r\n  const [theme, setTheme] = React.useState(Theme.North);\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme, setTheme }}>\r\n      <div className=\"App\" data-testid=\"App\">\r\n        <AcnhHeader />\r\n        <Settings />\r\n        <FishGuide />\r\n        <Footer />\r\n      </div>\r\n    </ThemeContext.Provider >\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}