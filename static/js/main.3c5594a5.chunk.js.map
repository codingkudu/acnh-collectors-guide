{"version":3,"sources":["components/FishCard/FishCard.module.css","components/Settings/Settings.module.css","components/AcnhHeader/AcnhHeader.module.css","components/FishGuide/FishGuide.module.css","components/FishCards/FishCards.module.css","components/Footer/Footer.module.css","context/ThemeContext.tsx","components/AcnhHeader/AcnhHeader.tsx","services/getFishService.ts","components/FishCard/FishCard.tsx","components/FishCards/FishCards.tsx","components/FishGuide/FishGuide.tsx","components/Footer/Footer.tsx","components/Settings/Settings.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Hemisphere","AcnhHeader","className","styles","data-testid","Navbar","nav","bg","variant","expand","Brand","href","GetFishService","useState","status","result","setResult","useEffect","axios","get","then","response","data","payload","catch","error","ThemeContext","createContext","themes","hemisphere","North","featureCarousel","setTheme","theme","console","warn","useTheme","useContext","FishCard","fish","fishprop","Container","Row","row","Col","src","icon_uri","alt","name","details","id","availability","isAllDay","toString","isAllYear","join","location","time","shadow","FishCards","featureSwitch","fishes","currMonth","Date","getMonth","filterFish","filter","includes","length","Carousel","map","Item","FishGuide","service","Footer","target","rel","Settings","formatter","Intl","DateTimeFormat","month","hemisphereRadios","value","South","format","header","ButtonGroup","toggle","radio","idx","ToggleButton","type","checked","onChange","App","React","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c5594a5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"FishCard\":\"FishCard_FishCard__1Tie_\",\"row\":\"FishCard_row__1EYXn\",\"details\":\"FishCard_details__1xIzH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Settings\":\"Settings_Settings__3JhjC\",\"container\":\"Settings_container__NFx3P\",\"header\":\"Settings_header__2ERoI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AcnhHeader\":\"AcnhHeader_AcnhHeader__hfl5w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FishGuide\":\"FishGuide_FishGuide__1gxYT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FishCards\":\"FishCards_FishCards__1KK5n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App-link\":\"Footer_App-link__1a16Z\"};","import { createContext, useContext } from \"react\";\r\n\r\ninterface Themes {\r\n    hemisphere: Hemisphere;\r\n    featureCarousel: boolean;\r\n}\r\n\r\nexport enum Hemisphere {\r\n    North = 'north',\r\n    South = 'south',\r\n}\r\n\r\nexport type ThemeContextType = {\r\n    themes: Themes;\r\n    setTheme: (Theme: Themes) => void;\r\n}\r\n\r\nexport const ThemeContext = createContext<ThemeContextType>({ themes: { hemisphere: Hemisphere.North, featureCarousel: false }, setTheme: theme => console.warn('no theme provider') });\r\nexport const useTheme = () => useContext(ThemeContext); // custom hook have prefix 'use'","import React from 'react';\r\nimport { Navbar } from 'react-bootstrap';\r\nimport styles from './AcnhHeader.module.css';\r\n\r\nconst AcnhHeader: React.FC = () => (\r\n  <div className={styles.AcnhHeader} data-testid=\"AcnhHeader\">\r\n    <Navbar className={styles.nav} bg=\"success\" variant=\"dark\" expand=\"lg\">\r\n      <Navbar.Brand href=\"#home\">ACNH: Collectors Guide</Navbar.Brand>\r\n    </Navbar>\r\n  </div>\r\n);\r\n\r\nexport default AcnhHeader;\r\n","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Fish } from \"../types/Fish\";\r\nimport { Service } from \"../types/Service\";\r\n\r\n\r\nexport interface Fishs {\r\n    results: Fish[];\r\n}\r\n\r\nconst GetFishService = () => {\r\n    const [result, setResult] = useState<Service<Fish[]>>({\r\n        status: 'loading'\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get('https://acnhapi.com/v1a/fish/')\r\n            .then(response => response.data)\r\n            .then(response => setResult({ status: 'loaded', payload: response }))\r\n            .catch(error => setResult({ status: 'error', error }));\r\n    }, []);\r\n    return result;\r\n};\r\n\r\nexport default GetFishService;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { Fish } from '../../types/Fish';\r\nimport styles from './FishCard.module.css';\r\n\r\ninterface IFishCardProps {\r\n  fishprop: Fish\r\n}\r\n\r\nconst FishCard: React.FC<IFishCardProps> = ({ fishprop: fish }: IFishCardProps) => {\r\n  return (\r\n    <div className={styles.FishCard} data-testid=\"FishCard\">\r\n      <Container>\r\n        <Row className={styles.row}>\r\n          <Col>\r\n            <img src={fish.icon_uri} alt={fish.name['name-EUen']}></img>\r\n          </Col>\r\n          <Col className={styles.details}>\r\n            <div>\r\n              Name: {fish.name['name-EUen']}\r\n            </div>\r\n            <div>\r\n              Id: {fish.id}\r\n            </div>\r\n            <div>\r\n              All day: {fish.availability.isAllDay.toString()}\r\n            </div>\r\n            <div>\r\n              All year: {fish.availability.isAllYear.toString()}\r\n            </div>\r\n            <div>\r\n              Southern Hemisphere Months: {fish.availability['month-array-southern'].join(\",\")}\r\n            </div>\r\n            <div>\r\n              Northern Hemisphere Months: {fish.availability['month-array-northern'].join(\",\")}\r\n            </div>\r\n            <div>\r\n              Location: {fish.availability.location}\r\n            </div>\r\n            <div>\r\n              Time: {fish.availability.time}\r\n            </div>\r\n            <div>\r\n              Shadow: {fish.shadow}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FishCard;\r\n","import React from 'react';\r\nimport { Carousel } from 'react-bootstrap';\r\nimport { Hemisphere, useTheme } from '../../context/ThemeContext';\r\nimport { Fish } from '../../types/Fish';\r\nimport FishCard from '../FishCard/FishCard';\r\nimport styles from './FishCards.module.css';\r\n\r\ninterface FishCardsProps {\r\n  fishes: Fish[]\r\n}\r\n\r\nconst FishCards: React.FC<FishCardsProps> = ({ fishes }: FishCardsProps) => {\r\n  const { themes: theme } = useTheme();\r\n\r\n  const OFFSET = 1;\r\n  const currMonth = new Date().getMonth() + OFFSET;\r\n\r\n  const filterFish = fishes.filter(fish => fish.availability.isAllYear === false)\r\n    .filter(fish => {\r\n      if (theme.hemisphere === Hemisphere.North) {\r\n        return fish.availability['month-array-northern'].includes(currMonth)\r\n      } else {\r\n        return fish.availability['month-array-southern'].includes(currMonth)\r\n      }\r\n    });\r\n\r\n  let featureSwitch;\r\n\r\n  if (theme.featureCarousel && filterFish.length > 0) {\r\n    featureSwitch =\r\n      <div>\r\n        <b>Swipe left or right to see next fish</b>\r\n        <Carousel>\r\n          {filterFish.map(fish => (\r\n            <Carousel.Item>\r\n              <FishCard fishprop={fish} />\r\n            </Carousel.Item>))}\r\n        </Carousel>\r\n      </div>\r\n  } else {\r\n    featureSwitch = <div>{filterFish.map(fish => (\r\n      <div className=\"fish-item\">\r\n        <FishCard fishprop={fish} />\r\n      </div>))}</div >\r\n  }\r\n\r\n  return (\r\n    <div className={styles.FishCards} data-testid=\"FishCards\">\r\n      {featureSwitch}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default FishCards;\r\n","import React from 'react';\r\nimport styles from './FishGuide.module.css';\r\nimport GetFishService from '../../services/getFishService';\r\nimport FishCards from '../FishCards/FishCards';\r\n\r\nconst FishGuide: React.FC<{}> = () => {\r\n\r\n  const service = GetFishService();\r\n\r\n  return (\r\n    < div className={styles.FishGuide} data-testid=\"FishGuide\" >\r\n      <main>\r\n        <div>\r\n          <h3>Fish Guide</h3>\r\n          <h5>Fish availiable this month</h5>\r\n        </div>\r\n        <div>\r\n          {service.status === 'loading' && (\r\n            <div className=\"loader-container\">\r\n              <div>Loading</div>\r\n            </div>\r\n          )}\r\n          {\r\n            service.status === 'loaded'\r\n            && !!service.payload\r\n            && (<FishCards fishes={service.payload} />)\r\n          }\r\n          {service.status === 'loaded' && !service.payload && (\r\n            <div>Error empty array returned</div>\r\n          )}\r\n          {service.status === 'error' && (\r\n            <div>Oh no, error in calling endpoint</div>\r\n          )}\r\n        </div>\r\n      </main>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default FishGuide;\r\n","import React from 'react';\r\nimport styles from './Footer.module.css';\r\n\r\nconst Footer: React.FC = () => (\r\n  <div className={styles.Footer} data-testid=\"Footer\">\r\n    <footer>\r\n      <a\r\n        className=\"App-link\"\r\n        href=\"https://github.com/codingkudu/codingkudu\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        CodingKudu on github\r\n        </a>\r\n    </footer>\r\n  </div>\r\n);\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { ButtonGroup, Row, Container, ToggleButton } from 'react-bootstrap';\r\nimport styles from './Settings.module.css';\r\nimport { Hemisphere, useTheme } from '../../context/ThemeContext';\r\n\r\ninterface Props {\r\n}\r\n\r\nconst Settings: React.FC<Props> = () => {\r\n\r\n  const formatter = new Intl.DateTimeFormat('en', { month: 'long' });\r\n\r\n  // Context API\r\n  const { themes: theme, setTheme } = useTheme();\r\n  const hemisphereRadios = [\r\n    { name: 'North', value: Hemisphere.North },\r\n    { name: 'South', value: Hemisphere.South },\r\n  ];\r\n\r\n  const carsouelRadios = [\r\n    { name: 'On', value: 'true' },\r\n    { name: 'Off', value: 'false' },\r\n  ];\r\n\r\n  return (\r\n    <div className={styles.Settings} data-testid=\"Settings\">\r\n      <Container>\r\n        <Row>\r\n          <h4>Month: {formatter.format(new Date())}</h4>\r\n        </Row>\r\n      </Container>\r\n      <Container>\r\n        <Row>\r\n          <b className={styles.header}>Hemisphere:</b>\r\n          <ButtonGroup toggle>\r\n            {hemisphereRadios.map((radio, idx) => (\r\n              <ToggleButton\r\n                key={idx}\r\n                type=\"radio\"\r\n                variant=\"secondary\"\r\n                name=\"radio\"\r\n                value={radio.value}\r\n                checked={theme.hemisphere === radio.value}\r\n                onChange={() => setTheme({ hemisphere: radio.value, featureCarousel: theme.featureCarousel })}\r\n              >\r\n                {radio.name}\r\n              </ToggleButton>\r\n            ))}\r\n          </ButtonGroup>\r\n        </Row>\r\n        <Row>\r\n          <b className={styles.header}>Feat. toggle Carousel:</b>\r\n          <ButtonGroup toggle>\r\n            {carsouelRadios.map((radio, idx) => (\r\n              <ToggleButton\r\n                key={idx}\r\n                type=\"radio\"\r\n                variant=\"secondary\"\r\n                name=\"radio\"\r\n                value={radio.value}\r\n                checked={theme.featureCarousel.toString() === radio.value}\r\n                onChange={() => setTheme({ hemisphere: theme.hemisphere, featureCarousel: radio.value === 'true' })}\r\n              >\r\n                {radio.name}\r\n              </ToggleButton>\r\n            ))}\r\n          </ButtonGroup>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport AcnhHeader from './components/AcnhHeader/AcnhHeader';\r\nimport FishGuide from './components/FishGuide/FishGuide';\r\nimport Footer from './components/Footer/Footer';\r\nimport Settings from './components/Settings/Settings';\r\nimport { Hemisphere, ThemeContext } from './context/ThemeContext';\r\n\r\nfunction App() {\r\n  const [theme, setTheme] = React.useState({ hemisphere: Hemisphere.North, featureCarousel: false });\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ themes: theme, setTheme }}>\r\n      <div className=\"App\" data-testid=\"App\">\r\n        <AcnhHeader />\r\n        <Settings />\r\n        <FishGuide />\r\n        <Footer />\r\n      </div>\r\n    </ThemeContext.Provider >\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}