{"version":3,"sources":["components/Settings/Settings.module.css","components/CollectableCard/CollectableCard.module.css","components/AcnhHeader/AcnhHeader.module.css","components/About/About.module.css","components/CollectableCards/CollectableCards.module.css","components/CollectableGuide/CollectableGuide.module.css","components/CollectableViews/CollectableViews.module.css","components/Footer/Footer.module.css","constants/CollectionType.tsx","components/AcnhHeader/AcnhHeader.tsx","context/ThemeContext.tsx","components/About/About.tsx","services/useGetCollectablesService.ts","components/CollectableCard/CollectableCard.tsx","components/CollectableCards/CollectableCards.tsx","components/CollectableGuide/CollectableGuide.tsx","components/CollectableViews/CollectableViews.tsx","components/Footer/Footer.tsx","components/Settings/Settings.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","CollectionType","AcnhHeader","className","styles","data-testid","Navbar","nav","bg","variant","expand","Brand","href","Hemisphere","About","useGetCollectablesService","endpoint","useState","status","result","setResult","useEffect","axios","get","then","response","data","payload","ThemeContext","createContext","themes","hemisphere","North","featureCarousel","setTheme","theme","console","warn","useTheme","useContext","printAsYesOrNo","value","printAsMonthRange","months","mnths","length","CollectableCard","collectable","Container","Row","row","Col","src","icon_uri","alt","name","details","id","availability","isAllDay","isAllYear","location","time","shadow","label","Fish","Bugs","SeaCreatures","CollectableCards","featureSwitch","collectableType","collectables","currMonth","Date","getMonth","filteredCollectables","filter","includes","Carousel","map","Item","index","title","CollectableGuide","CollectableViews","Tabs","defaultActiveKey","fill","Tab","eventKey","Footer","target","rel","Settings","formatter","Intl","DateTimeFormat","month","hemisphereRadios","South","format","sm","header","ButtonGroup","toggle","buttonGroupToggle","radio","idx","ToggleButton","type","checked","onChange","toString","App","React","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.858fb6b7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Settings_header__2ERoI\",\"row\":\"Settings_row__1_AfF\",\"buttonGroupToggle\":\"Settings_buttonGroupToggle__2dQtl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CollectableCard\":\"CollectableCard_CollectableCard__3FBqh\",\"row\":\"CollectableCard_row__3YRO9\",\"details\":\"CollectableCard_details__1sFDY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AcnhHeader\":\"AcnhHeader_AcnhHeader__hfl5w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"About\":\"About_About__w2mXW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CollectableCards\":\"CollectableCards_CollectableCards__2SeV-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CollectableGuide\":\"CollectableGuide_CollectableGuide__3Og2_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CollectableViews\":\"CollectableViews_CollectableViews__3kVoS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App-link\":\"Footer_App-link__1a16Z\"};","\r\nexport enum CollectionType {\r\n    Fish = 'fish',\r\n    Bugs = 'bugs',\r\n    SeaCreatures = 'sea'\r\n}\r\n","import React from 'react';\r\nimport { Navbar } from 'react-bootstrap';\r\nimport styles from './AcnhHeader.module.css';\r\n\r\nconst AcnhHeader: React.FC = () => (\r\n  <div className={styles.AcnhHeader} data-testid=\"AcnhHeader\">\r\n    <Navbar className={styles.nav} bg=\"success\" variant=\"dark\" expand=\"lg\">\r\n      <Navbar.Brand href=\"#home\">ACNH: Collectors Guide</Navbar.Brand>\r\n    </Navbar>\r\n  </div>\r\n);\r\n\r\nexport default AcnhHeader;\r\n","import { createContext, useContext } from \"react\";\r\n\r\ninterface Themes {\r\n    hemisphere: Hemisphere;\r\n    featureCarousel: boolean;\r\n}\r\n\r\nexport enum Hemisphere {\r\n    North = 'north',\r\n    South = 'south',\r\n}\r\n\r\nexport type ThemeContextType = {\r\n    themes: Themes;\r\n    setTheme: (Theme: Themes) => void;\r\n}\r\n\r\nexport const ThemeContext = createContext<ThemeContextType>({ themes: { hemisphere: Hemisphere.North, featureCarousel: false }, setTheme: theme => console.warn('no theme provider') });\r\nexport const useTheme = () => useContext(ThemeContext); // custom hook have prefix 'use'","import React, { FC } from 'react';\nimport styles from './About.module.css';\n\ninterface AboutProps {}\n\nconst About: FC<AboutProps> = () => {\n  return (\n    <div className={styles.About} data-testid=\"About\">\n      <h1>Welcome to ACNH: Collectors Guide</h1>\n      <p>Are you a Completionist gamer? Need to scratch that itch of getting a complete set?</p>\n      <p>This is the place to find out where to complete you ACNH collections. Just use the toggle buttons above to select you hemisphere and style of layout.</p>\n      <p>Happy collecting! 😍</p>\n    </div>\n  );\n}\n\nexport default About;\n","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Collectable } from \"../types/Collectable\";\r\nimport { Service } from \"../types/Service\";\r\n\r\nconst useGetCollectablesService = (endpoint: string) => {\r\n    const [result, setResult] = useState<Service<Collectable[]>>({\r\n        status: 'loading'\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get('https://acnhapi.com/v1a/' + endpoint + '/')\r\n            .then(response => response.data)\r\n            .then(response => setResult({ status: 'loaded', payload: response }));\r\n    }, [endpoint]);\r\n    return result;\r\n};\r\n\r\nexport default useGetCollectablesService;\r\n","import React, { FC } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { Collectable } from '../../types/Collectable';\r\nimport styles from './CollectableCard.module.css';\r\n\r\ninterface CollectableCardProps {\r\n  collectable: Collectable\r\n}\r\n\r\nconst CollectableCard: FC<CollectableCardProps> = ({collectable}: CollectableCardProps) => {\r\n  return (\r\n    <div className={styles.CollectableCard} data-testid=\"CollectableCard\">\r\n      <Container>\r\n        <Row className={styles.row}>\r\n          <Col>\r\n            <img src={collectable.icon_uri} alt={collectable.name['name-EUen']} data-testid=\"CollectableImage\"></img>\r\n          </Col>\r\n          <Col className={styles.details}>\r\n            <div data-testid=\"CollectableName\">\r\n              <b>Name:</b> {collectable.name['name-EUen']}\r\n            </div>\r\n            <div data-testid=\"CollectableId\">\r\n              <b>Id:</b> {collectable.id}\r\n            </div>\r\n            <div data-testid=\"CollectableAllDay\">\r\n              <b>All day:</b> {printAsYesOrNo(collectable.availability.isAllDay)}\r\n            </div>\r\n            <div data-testid=\"CollectableAllYear\">\r\n              <b>All year:</b> {printAsYesOrNo(collectable.availability.isAllYear)}\r\n            </div>\r\n            <div data-testid=\"CollectableSouth\">\r\n              <b>Southern Hemisphere Months:</b> {printAsMonthRange(collectable.availability['month-array-southern'])}\r\n            </div>\r\n            <div data-testid=\"CollectableNorth\">\r\n              <b>Northern Hemisphere Months:</b> {printAsMonthRange(collectable.availability['month-array-northern'])}\r\n            </div>\r\n            <div data-testid=\"CollectableLocation\">\r\n              <b>Location:</b> {collectable.availability.location}\r\n            </div>\r\n            <div data-testid=\"CollectableTime\">\r\n              <b>Time:</b> {collectable.availability.time}\r\n            </div>\r\n            <div>\r\n              <b>Shadow:</b> {collectable.shadow}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction printAsYesOrNo(value: boolean): string {\r\n  return value ? 'Yes' : 'No';\r\n}\r\n\r\nfunction printAsMonthRange(months: number[]): string {\r\n  const mnths = ['', 'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n  return mnths[months[0]] + '-' + mnths[months[months.length - 1]];\r\n}\r\n\r\nexport default CollectableCard;\r\n","import React, { FC } from 'react';\nimport { Carousel } from 'react-bootstrap';\nimport { CollectionType } from '../../constants/CollectionType';\nimport { Hemisphere, useTheme } from '../../context/ThemeContext';\nimport { Collectable } from '../../types/Collectable';\nimport CollectableCard from '../CollectableCard/CollectableCard';\nimport styles from './CollectableCards.module.css';\n\ninterface CollectableCardsProps {\n  collectableType: string,\n  collectables: Collectable[]\n}\n\nconst CollectableCards: FC<CollectableCardsProps> = ({ collectableType, collectables }: CollectableCardsProps) => {\n  const { themes: theme } = useTheme();\n\n  const OFFSET = 1;\n  const currMonth = new Date().getMonth() + OFFSET;\n\n  const filteredCollectables = collectables.filter(collectable => collectable.availability.isAllYear === false)\n    .filter(collectable => {\n      if (theme.hemisphere === Hemisphere.North) {\n        return collectable.availability['month-array-northern'].includes(currMonth)\n      } else {\n        return collectable.availability['month-array-southern'].includes(currMonth)\n      }\n    });\n\n    let featureSwitch;\n\n    if (theme.featureCarousel && filteredCollectables.length > 0) {\n      featureSwitch =\n        <div>\n          <b>Swipe LEFT ⬅ or RIGHT ➡ to see next {label(collectableType)}</b>\n          <Carousel>\n            {filteredCollectables.map(collectable => (\n              <Carousel.Item>\n                <CollectableCard collectable={collectable} />\n              </Carousel.Item>))}\n          </Carousel>\n        </div>\n    } else {\n      featureSwitch =\n        <div>\n          <b>Swipe UP ⬆ or DOWN ⬇ to see {label(collectableType)}</b>\n          {filteredCollectables.map((collectable, index) => (\n            <div className=\"collectable-item\" key={index}>\n              <CollectableCard collectable={collectable} />\n            </div>)\n          )}\n        </div >\n    }\n  \n  return (\n    <div className={styles.CollectableCards} data-testid=\"CollectableCards\">\n      {featureSwitch}\n    </div>\n  );\n}\n\nfunction label(value: string): string {\n  if (value === CollectionType.Fish) return 'fish';\n  else if (value === CollectionType.Bugs) return 'bug';\n  else if (value === CollectionType.SeaCreatures) return 'sea creature';\n  else return value;\n}\n\nexport default CollectableCards;\n","import React, { FC } from 'react';\nimport { CollectionType } from \"../../constants/CollectionType\";\nimport useGetCollectablesService from '../../services/useGetCollectablesService';\nimport CollectableCards from '../CollectableCards/CollectableCards';\nimport styles from './CollectableGuide.module.css';\n\ninterface CollectableGuideProps {\n  endpoint: string\n}\n\nconst CollectableGuide: FC<CollectableGuideProps> = ({endpoint}: CollectableGuideProps) => {\n\n  const collectables  = useGetCollectablesService(endpoint);\n  \n  return (\n    <div className={styles.CollectableGuide} data-testid=\"CollectableGuide\">\n      <main>\n        <div>\n          <h3>{title(endpoint)} Guide</h3>\n          <h5>{title(endpoint)} availiable this month</h5>\n        </div>\n        <div>\n          {collectables.status === 'loading' && (\n            <div className=\"loader-container\">\n              <div>Loading</div>\n            </div>\n          )}\n          {\n            collectables.status === 'loaded'\n            && !!collectables.payload\n            && (<CollectableCards collectableType={endpoint} collectables={collectables.payload} />)\n          }\n          {collectables.status === 'loaded' && !collectables.payload && (\n            <div>Error empty array returned</div>\n          )}\n          {collectables.status === 'error' && (\n            <div>Oh no, error in calling endpoint</div>\n          )}\n        </div>\n      </main>\n    </div>\n  )\n  \n};\n\n\nfunction title(value: string): string {\n  if (value === CollectionType.Fish) return 'Fish';\n  else if (value === CollectionType.Bugs) return 'Bugs';\n  else if (value === CollectionType.SeaCreatures) return 'Sea Creatures';\n  else return value;\n}\n\nexport default CollectableGuide;\n","import React, { FC } from 'react';\r\nimport { Tabs, Tab } from 'react-bootstrap';\r\nimport { CollectionType } from \"../../constants/CollectionType\";\r\nimport About from '../About/About';\r\nimport CollectableGuide from '../CollectableGuide/CollectableGuide';\r\nimport styles from './CollectableViews.module.css';\r\n\r\ninterface CollectableViewsProps {}\r\n\r\nconst CollectableViews: FC<CollectableViewsProps> = () => {\r\n\r\n  return (\r\n    <div className={styles.CollectableViews} data-testid=\"CollectableViews\">\r\n      <div>\r\n        <Tabs defaultActiveKey=\"about\" id=\"uncontrolled-tab-example\" className=\"mb-3\" fill data-testid=\"tabs\">\r\n          <Tab eventKey=\"about\" title=\"About\" data-testid=\"about-tab\">\r\n            <About />\r\n          </Tab>\r\n          <Tab eventKey=\"fish\" title=\"Fish\" data-testid=\"fish-tab\">\r\n            <CollectableGuide endpoint = {CollectionType.Fish}/>\r\n          </Tab>\r\n          <Tab eventKey=\"bugs\" title=\"Bugs\" data-testid=\"bug-tab\">\r\n              <CollectableGuide endpoint = {CollectionType.Bugs} />\r\n          </Tab>\r\n          <Tab eventKey=\"sea\" title=\"Sea Creatures\" data-testid=\"sea-tab\">\r\n            <CollectableGuide endpoint = {CollectionType.SeaCreatures}/>\r\n          </Tab>\r\n        </Tabs>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CollectableViews;\r\n","import React from 'react';\r\nimport styles from './Footer.module.css';\r\n\r\nconst Footer: React.FC = () => (\r\n  <div className={styles.Footer} data-testid=\"Footer\">\r\n    <footer>\r\n      <a\r\n        className=\"App-link\"\r\n        href=\"https://github.com/codingkudu/codingkudu\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        CodingKudu on github\r\n        </a>\r\n    </footer>\r\n  </div>\r\n);\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { ButtonGroup, Row, Container, ToggleButton, Col } from 'react-bootstrap';\r\nimport styles from './Settings.module.css';\r\nimport { Hemisphere, useTheme } from '../../context/ThemeContext';\r\n\r\ninterface Props {\r\n}\r\n\r\nconst Settings: React.FC<Props> = () => {\r\n\r\n  const formatter = new Intl.DateTimeFormat('en', { month: 'long' });\r\n\r\n  // Context API\r\n  const { themes: theme, setTheme } = useTheme();\r\n  const hemisphereRadios = [\r\n    { name: 'North', value: Hemisphere.North },\r\n    { name: 'South', value: Hemisphere.South },\r\n  ];\r\n\r\n  const carsouelRadios = [\r\n    { name: 'On', value: 'true' },\r\n    { name: 'Off', value: 'false' },\r\n  ];\r\n\r\n  return (\r\n    <div data-testid=\"Settings\">\r\n      <Container>\r\n        <Row>\r\n          <h4>Month: {formatter.format(new Date())}</h4>\r\n        </Row>\r\n      </Container>\r\n      <Container>\r\n        <Row className={styles.row}>\r\n          <Col sm={4}>\r\n            <b className={styles.header}>Hemisphere:</b>\r\n          </Col>\r\n          <Col sm={8}>\r\n            <ButtonGroup toggle className={styles.buttonGroupToggle}>  \r\n              {hemisphereRadios.map((radio, idx) => (\r\n                <ToggleButton\r\n                  key={idx}\r\n                  type=\"radio\"\r\n                  variant=\"secondary\"\r\n                  name=\"radio\"\r\n                  value={radio.value}\r\n                  checked={theme.hemisphere === radio.value}\r\n                  onChange={() => setTheme({ hemisphere: radio.value, featureCarousel: theme.featureCarousel })}\r\n                  data-testid={'hemisphere-' + radio.name}\r\n                >\r\n                  {radio.name}\r\n                </ToggleButton>\r\n              ))}\r\n            </ButtonGroup>\r\n          </Col>\r\n        </Row>\r\n        <Row className={styles.row}>\r\n          <Col sm={4}>\r\n          <b className={styles.header}>Feature toggle Carousel:</b>\r\n          </Col>\r\n          <Col sm={8}>\r\n            <ButtonGroup toggle className={styles.buttonGroupToggle}>\r\n              {carsouelRadios.map((radio, idx) => (\r\n                <ToggleButton\r\n                  key={idx}\r\n                  type=\"radio\"\r\n                  variant=\"secondary\"\r\n                  name=\"radio\"\r\n                  value={radio.value}\r\n                  checked={theme.featureCarousel.toString() === radio.value}\r\n                  onChange={() => setTheme({ hemisphere: theme.hemisphere, featureCarousel: radio.value === 'true' })}\r\n                  data-testid={'carousel-' + radio.name}\r\n                >\r\n                  {radio.name}\r\n                </ToggleButton>\r\n              ))}\r\n            </ButtonGroup>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport AcnhHeader from './components/AcnhHeader/AcnhHeader';\r\nimport CollectableViews from './components/CollectableViews/CollectableViews';\r\nimport Footer from './components/Footer/Footer';\r\nimport Settings from './components/Settings/Settings';\r\nimport { Hemisphere, ThemeContext } from './context/ThemeContext';\r\n\r\nfunction App() {\r\n  const [theme, setTheme] = React.useState({ hemisphere: Hemisphere.North, featureCarousel: false });\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ themes: theme, setTheme }}>\r\n      <div className=\"App\" data-testid=\"App\">\r\n        <AcnhHeader />\r\n        <Settings />\r\n        <CollectableViews />\r\n        <Footer />\r\n      </div>\r\n    </ThemeContext.Provider >\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}